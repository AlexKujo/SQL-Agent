[
    {
        "table_name": "category_name_translation",
        "columns_names": [
            "product_category_name",
            "product_category_name_english"
        ],
        "content": "TABLE: category_name_translation\n\nDESCRIPTION:\nTranslates the product_category_name to english.",
        "chunk_type": "description",
        "chunk_order": 1
    },
    {
        "table_name": "category_name_translation",
        "columns_names": [
            "product_category_name",
            "product_category_name_english"
        ],
        "content": "TABLE: category_name_translation\n\nSCHEMA:\nCREATE TABLE category_name_translation (\n\tproduct_category_name TEXT, \n\tproduct_category_name_english TEXT\n)",
        "chunk_type": "schema",
        "chunk_order": 2
    },
    {
        "table_name": "category_name_translation",
        "columns_names": [
            "product_category_name",
            "product_category_name_english"
        ],
        "content": "TABLE: category_name_translation\n\nSAMPLE DATA:\n/*\n3 rows from category_name_translation table:\nproduct_category_name\tproduct_category_name_english\nbeleza_saude\thealth_beauty\ninformatica_acessorios\tcomputers_accessories\nautomotivo\tauto\n*/",
        "chunk_type": "samples",
        "chunk_order": 3
    },
    {
        "table_name": "customers",
        "columns_names": [
            "customer_id",
            "customer_unique_id",
            "customer_zip_code_prefix",
            "customer_city",
            "customer_state"
        ],
        "content": "TABLE: customers\n\nDESCRIPTION:\nThis dataset has information about the customer and its location. Use it to identify unique customers in the orders dataset and to find the orders delivery location.  At our system each order is assigned to a unique customer_id. This means that the same customer will get different ids for different orders. The purpose of having a customer_unique_id on the dataset is to allow you to identify customers that made repurchases at the store. Otherwise you would find that each order had a different customer associated with.",
        "chunk_type": "description",
        "chunk_order": 1
    },
    {
        "table_name": "customers",
        "columns_names": [
            "customer_id",
            "customer_unique_id",
            "customer_zip_code_prefix",
            "customer_city",
            "customer_state"
        ],
        "content": "TABLE: customers\n\nSCHEMA:\nCREATE TABLE customers (\n\tcustomer_id TEXT NOT NULL, \n\tcustomer_unique_id TEXT NOT NULL, \n\tcustomer_zip_code_prefix BIGINT, \n\tcustomer_city TEXT, \n\tcustomer_state TEXT, \n\tCONSTRAINT customers_pkey PRIMARY KEY (customer_id)\n)",
        "chunk_type": "schema",
        "chunk_order": 2
    },
    {
        "table_name": "customers",
        "columns_names": [
            "customer_id",
            "customer_unique_id",
            "customer_zip_code_prefix",
            "customer_city",
            "customer_state"
        ],
        "content": "TABLE: customers\n\nCOLUMN DESCRIPTIONS:\n/*\nColumn Comments: {'customer_id': 'key to the orders dataset. Each order has a unique customer_id', 'customer_unique_id': 'unique identifier of a customer', 'customer_zip_code_prefix': 'first five digits of customer zip code'}\n*/",
        "chunk_type": "columns",
        "chunk_order": 3
    },
    {
        "table_name": "customers",
        "columns_names": [
            "customer_id",
            "customer_unique_id",
            "customer_zip_code_prefix",
            "customer_city",
            "customer_state"
        ],
        "content": "TABLE: customers\n\nSAMPLE DATA:\n/*\n3 rows from customers table:\ncustomer_id\tcustomer_unique_id\tcustomer_zip_code_prefix\tcustomer_city\tcustomer_state\n06b8999e2fba1a1fbc88172c00ba8bc7\t861eff4711a542e4b93843c6dd7febb0\t14409\tfranca\tSP\n18955e83d337fd6b2def6b18a428ac77\t290c77bc529b7ac935b93aa66c333dc3\t9790\tsao bernardo do campo\tSP\n4e7b3e00288586ebd08712fdd0374a03\t060e732b5b29e8181a18229c7b0b2b5e\t1151\tsao paulo\tSP\n*/",
        "chunk_type": "samples",
        "chunk_order": 4
    },
    {
        "table_name": "geolocation",
        "columns_names": [
            "geolocation_zip_code_prefix",
            "geolocation_lat",
            "geolocation_lng",
            "geolocation_city",
            "geolocation_state",
            "id"
        ],
        "content": "TABLE: geolocation\n\nDESCRIPTION:\nThis dataset has information Brazilian zip codes and its lat/lng coordinates. Use it to plot maps and find distances between sellers and customers.",
        "chunk_type": "description",
        "chunk_order": 1
    },
    {
        "table_name": "geolocation",
        "columns_names": [
            "geolocation_zip_code_prefix",
            "geolocation_lat",
            "geolocation_lng",
            "geolocation_city",
            "geolocation_state",
            "id"
        ],
        "content": "TABLE: geolocation\n\nSCHEMA:\nCREATE TABLE geolocation (\n\tgeolocation_zip_code_prefix BIGINT NOT NULL, \n\tgeolocation_lat DOUBLE PRECISION, \n\tgeolocation_lng DOUBLE PRECISION, \n\tgeolocation_city TEXT, \n\tgeolocation_state TEXT, \n\tid BIGINT GENERATED BY DEFAULT AS IDENTITY (INCREMENT BY 1 START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 NO CYCLE)\n)",
        "chunk_type": "schema",
        "chunk_order": 2
    },
    {
        "table_name": "geolocation",
        "columns_names": [
            "geolocation_zip_code_prefix",
            "geolocation_lat",
            "geolocation_lng",
            "geolocation_city",
            "geolocation_state",
            "id"
        ],
        "content": "TABLE: geolocation\n\nCOLUMN DESCRIPTIONS:\n/*\nColumn Comments: {'geolocation_zip_code_prefix': 'first 5 digits of zip code', 'geolocation_lat': 'latitude', 'geolocation_lng': 'longitude'}\n*/",
        "chunk_type": "columns",
        "chunk_order": 3
    },
    {
        "table_name": "geolocation",
        "columns_names": [
            "geolocation_zip_code_prefix",
            "geolocation_lat",
            "geolocation_lng",
            "geolocation_city",
            "geolocation_state",
            "id"
        ],
        "content": "TABLE: geolocation\n\nSAMPLE DATA:\n/*\n3 rows from geolocation table:\ngeolocation_zip_code_prefix\tgeolocation_lat\tgeolocation_lng\tgeolocation_city\tgeolocation_state\tid\n1037\t-23.5456212811527\t-46.6392920480017\tsao paulo\tSP\t1\n1046\t-23.5460811270355\t-46.6448202983716\tsao paulo\tSP\t2\n1046\t-23.5461289664147\t-46.6429514836114\tsao paulo\tSP\t3\n*/",
        "chunk_type": "samples",
        "chunk_order": 4
    },
    {
        "table_name": "order_items",
        "columns_names": [
            "order_id",
            "order_item_id",
            "product_id",
            "seller_id",
            "shipping_limit_date",
            "price",
            "freight_value"
        ],
        "content": "TABLE: order_items\n\nDESCRIPTION:\nIncludes data about the items purchased within each order. Example: If The order_id has 3 items (same product). Each item has the freight calculated accordingly to its measures and weight. To get the total freight value for each order you just have to sum.",
        "chunk_type": "description",
        "chunk_order": 1
    },
    {
        "table_name": "order_items",
        "columns_names": [
            "order_id",
            "order_item_id",
            "product_id",
            "seller_id",
            "shipping_limit_date",
            "price",
            "freight_value"
        ],
        "content": "TABLE: order_items\n\nSCHEMA:\nCREATE TABLE order_items (\n\torder_id TEXT NOT NULL, \n\torder_item_id BIGINT NOT NULL, \n\tproduct_id TEXT NOT NULL, \n\tseller_id TEXT NOT NULL, \n\tshipping_limit_date TIMESTAMP WITH TIME ZONE, \n\tprice DOUBLE PRECISION, \n\tfreight_value DOUBLE PRECISION, \n\tCONSTRAINT order_items_pkey PRIMARY KEY (order_id, order_item_id, product_id, seller_id), \n\tCONSTRAINT order_items_order_id_fkey FOREIGN KEY(order_id) REFERENCES orders (order_id) ON DELETE CASCADE ON UPDATE CASCADE,",
        "chunk_type": "schema",
        "chunk_order": 2
    },
    {
        "table_name": "order_items",
        "columns_names": [
            "order_id",
            "order_item_id",
            "product_id",
            "seller_id",
            "shipping_limit_date",
            "price",
            "freight_value"
        ],
        "content": "TABLE: order_items\n\nSCHEMA:\nCONSTRAINT order_items_product_id_fkey FOREIGN KEY(product_id) REFERENCES products (product_id) ON DELETE CASCADE ON UPDATE CASCADE, \n\tCONSTRAINT order_items_seller_id_fkey FOREIGN KEY(seller_id) REFERENCES sellers (seller_id) ON DELETE CASCADE ON UPDATE CASCADE\n)",
        "chunk_type": "schema",
        "chunk_order": 3
    },
    {
        "table_name": "order_items",
        "columns_names": [
            "order_id",
            "order_item_id",
            "product_id",
            "seller_id",
            "shipping_limit_date",
            "price",
            "freight_value"
        ],
        "content": "TABLE: order_items\n\nCOLUMN DESCRIPTIONS:\n/*\nColumn Comments: {'order_id': 'order unique identifier', 'order_item_id': 'sequential number identifying number of items included in the same order.', 'product_id': 'product unique identifier', 'seller_id': 'seller unique identifier', 'shipping_limit_date': 'Shows the seller shipping limit date for handling the order over to the logistic partner.', 'freight_value': 'item freight value item (if an order has more than one item the freight value is splitted between items)'}\n*/",
        "chunk_type": "columns",
        "chunk_order": 4
    },
    {
        "table_name": "order_items",
        "columns_names": [
            "order_id",
            "order_item_id",
            "product_id",
            "seller_id",
            "shipping_limit_date",
            "price",
            "freight_value"
        ],
        "content": "TABLE: order_items\n\nSAMPLE DATA:\n/*\n3 rows from order_items table:\norder_id\torder_item_id\tproduct_id\tseller_id\tshipping_limit_date\tprice\tfreight_value\n00010242fe8c5a6d1ba2dd792cb16214\t1\t4244733e06e7ecb4970a6e2683c13e61\t48436dade18ac8b2bce089ec2a041202\t2017-09-19 09:45:35+00:00\t58.9\t13.29\n00018f77f2f0320c557190d7a144bdd3\t1\te5f2d52b802189ee658865ca93d83a8f\tdd7ddc04e1b6c2c614352b383efe2d36\t2017-05-03 11:05:13+00:00\t239.9\t19.93\n000229ec398224ef6ca0657da4fc703e\t1\tc777355d18b72b67abbeef9df44fd0fd\t5b51032eddd242adc84c38acab88f23d\t2018-01-18 14:48:30+00:00\t199.0\t17.87\n*/",
        "chunk_type": "samples",
        "chunk_order": 5
    },
    {
        "table_name": "order_payments",
        "columns_names": [
            "order_id",
            "payment_sequential",
            "payment_type",
            "payment_installments",
            "payment_value"
        ],
        "content": "TABLE: order_payments\n\nDESCRIPTION:\nincludes data about the orders payment options",
        "chunk_type": "description",
        "chunk_order": 1
    },
    {
        "table_name": "order_payments",
        "columns_names": [
            "order_id",
            "payment_sequential",
            "payment_type",
            "payment_installments",
            "payment_value"
        ],
        "content": "TABLE: order_payments\n\nSCHEMA:\nCREATE TABLE order_payments (\n\torder_id TEXT NOT NULL, \n\tpayment_sequential BIGINT NOT NULL, \n\tpayment_type TEXT, \n\tpayment_installments BIGINT, \n\tpayment_value DOUBLE PRECISION, \n\tCONSTRAINT payments_pkey PRIMARY KEY (order_id, payment_sequential), \n\tCONSTRAINT order_payments_order_id_fkey FOREIGN KEY(order_id) REFERENCES orders (order_id) ON DELETE CASCADE ON UPDATE CASCADE\n)",
        "chunk_type": "schema",
        "chunk_order": 2
    },
    {
        "table_name": "order_payments",
        "columns_names": [
            "order_id",
            "payment_sequential",
            "payment_type",
            "payment_installments",
            "payment_value"
        ],
        "content": "TABLE: order_payments\n\nCOLUMN DESCRIPTIONS:\n/*\nColumn Comments: {'order_id': 'unique identifier of an order.', 'payment_sequential': 'a customer may pay an order with more than one payment method. If he does so, a sequence will be created to', 'payment_type': 'method of payment chosen by the customer.', 'payment_installments': 'number of installments chosen by the customer.', 'payment_value': 'transaction value.'}\n*/",
        "chunk_type": "columns",
        "chunk_order": 3
    },
    {
        "table_name": "order_payments",
        "columns_names": [
            "order_id",
            "payment_sequential",
            "payment_type",
            "payment_installments",
            "payment_value"
        ],
        "content": "TABLE: order_payments\n\nSAMPLE DATA:\n/*\n3 rows from order_payments table:\norder_id\tpayment_sequential\tpayment_type\tpayment_installments\tpayment_value\nb81ef226f3fe1789b1e8b2acac839d17\t1\tcredit_card\t8\t99.33\na9810da82917af2d9aefd1278f1dcfa0\t1\tcredit_card\t1\t24.39\n25e8ea4e93396b6fa0d3dd708e76c1bd\t1\tcredit_card\t1\t65.71\n*/",
        "chunk_type": "samples",
        "chunk_order": 4
    },
    {
        "table_name": "order_reviews",
        "columns_names": [
            "review_id",
            "order_id",
            "review_score",
            "review_comment_title",
            "review_comment_message",
            "review_creation_date",
            "review_answer_timestamp"
        ],
        "content": "TABLE: order_reviews\n\nDESCRIPTION:\nincludes data about the reviews made by the customers.  After a customer purchases the product from Olist Store a seller gets notified to fulfill that order. Once the customer receives the product, or the estimated delivery date is due, the customer gets a satisfaction survey by email where he can give a note for the purchase experience and write down some comments.",
        "chunk_type": "description",
        "chunk_order": 1
    },
    {
        "table_name": "order_reviews",
        "columns_names": [
            "review_id",
            "order_id",
            "review_score",
            "review_comment_title",
            "review_comment_message",
            "review_creation_date",
            "review_answer_timestamp"
        ],
        "content": "TABLE: order_reviews\n\nSCHEMA:\nCREATE TABLE order_reviews (\n\treview_id TEXT NOT NULL, \n\torder_id TEXT NOT NULL, \n\treview_score BIGINT, \n\treview_comment_title TEXT, \n\treview_comment_message TEXT, \n\treview_creation_date TIMESTAMP WITH TIME ZONE, \n\treview_answer_timestamp TIMESTAMP WITH TIME ZONE, \n\tCONSTRAINT order_reviews_pkey PRIMARY KEY (review_id, order_id), \n\tCONSTRAINT order_reviews_order_id_fkey FOREIGN KEY(order_id) REFERENCES orders (order_id) ON DELETE CASCADE ON UPDATE CASCADE\n)",
        "chunk_type": "schema",
        "chunk_order": 2
    },
    {
        "table_name": "order_reviews",
        "columns_names": [
            "review_id",
            "order_id",
            "review_score",
            "review_comment_title",
            "review_comment_message",
            "review_creation_date",
            "review_answer_timestamp"
        ],
        "content": "TABLE: order_reviews\n\nSAMPLE DATA:\n/*\n3 rows from order_reviews table:\nreview_id\torder_id\treview_score\treview_comment_title\treview_comment_message\treview_creation_date\treview_answer_timestamp\n7bc2406110b926393aa56f80a40eba40\t73fc7af87114b39712e6da79b0a377eb\t4\t\t\t2018-01-18 00:00:00+00:00\t2018-01-18 21:46:59+00:00\n80e641a11e56f04c1ad469d5645fdfde\ta548910a1c6147796b98fdf73dbeba33\t5\t\t\t2018-03-10 00:00:00+00:00\t2018-03-11 03:05:13+00:00\n228ce5500dc1d8e020d8d1322874b6f0\tf9e4b658b201a9f2ecdecbb34bed034b\t5\t\t\t2018-02-17 00:00:00+00:00\t2018-02-18 14:36:24+00:00\n*/",
        "chunk_type": "samples",
        "chunk_order": 3
    },
    {
        "table_name": "orders",
        "columns_names": [
            "order_id",
            "customer_id",
            "order_status",
            "order_purchase_timestamp",
            "order_approved_at",
            "order_delivered_carrier_date",
            "order_delivered_customer_date",
            "order_estimated_delivery_date"
        ],
        "content": "TABLE: orders\n\nDESCRIPTION:\nThis is the core dataset. From each order you might find all other information.",
        "chunk_type": "description",
        "chunk_order": 1
    },
    {
        "table_name": "orders",
        "columns_names": [
            "order_id",
            "customer_id",
            "order_status",
            "order_purchase_timestamp",
            "order_approved_at",
            "order_delivered_carrier_date",
            "order_delivered_customer_date",
            "order_estimated_delivery_date"
        ],
        "content": "TABLE: orders\n\nSCHEMA:\nCREATE TABLE orders (\n\torder_id TEXT NOT NULL, \n\tcustomer_id TEXT, \n\torder_status TEXT, \n\torder_purchase_timestamp TIMESTAMP WITH TIME ZONE, \n\torder_approved_at TEXT, \n\torder_delivered_carrier_date TEXT, \n\torder_delivered_customer_date TEXT, \n\torder_estimated_delivery_date TIMESTAMP WITH TIME ZONE, \n\tCONSTRAINT orders_pkey PRIMARY KEY (order_id), \n\tCONSTRAINT orders_customer_id_fkey FOREIGN KEY(customer_id) REFERENCES customers (customer_id) ON DELETE RESTRICT ON UPDATE CASCADE\n)",
        "chunk_type": "schema",
        "chunk_order": 2
    },
    {
        "table_name": "orders",
        "columns_names": [
            "order_id",
            "customer_id",
            "order_status",
            "order_purchase_timestamp",
            "order_approved_at",
            "order_delivered_carrier_date",
            "order_delivered_customer_date",
            "order_estimated_delivery_date"
        ],
        "content": "TABLE: orders\n\nCOLUMN DESCRIPTIONS:\n/*",
        "chunk_type": "columns",
        "chunk_order": 3
    },
    {
        "table_name": "orders",
        "columns_names": [
            "order_id",
            "customer_id",
            "order_status",
            "order_purchase_timestamp",
            "order_approved_at",
            "order_delivered_carrier_date",
            "order_delivered_customer_date",
            "order_estimated_delivery_date"
        ],
        "content": "TABLE: orders\n\nCOLUMN DESCRIPTIONS:\nColumn Comments: {'order_id': 'unique identifier of the order.', 'customer_id': 'key to the customer dataset. Each order has a unique customer_id.', 'order_status': 'Reference to the order status (delivered, shipped, etc).', 'order_purchase_timestamp': 'Shows the purchase timestamp.', 'order_approved_at': 'Shows the payment approval timestamp.', 'order_delivered_carrier_date': 'Shows the order posting timestamp. When it was handled to the logistic partner.', 'order_delivered_customer_date': 'Shows the actual order delivery date to the customer.', 'order_estimated_delivery_date': 'Shows the",
        "chunk_type": "columns",
        "chunk_order": 4
    },
    {
        "table_name": "orders",
        "columns_names": [
            "order_id",
            "customer_id",
            "order_status",
            "order_purchase_timestamp",
            "order_approved_at",
            "order_delivered_carrier_date",
            "order_delivered_customer_date",
            "order_estimated_delivery_date"
        ],
        "content": "TABLE: orders\n\nCOLUMN DESCRIPTIONS:\nestimated delivery date that was informed to customer at the purchase moment.'}",
        "chunk_type": "columns",
        "chunk_order": 5
    },
    {
        "table_name": "orders",
        "columns_names": [
            "order_id",
            "customer_id",
            "order_status",
            "order_purchase_timestamp",
            "order_approved_at",
            "order_delivered_carrier_date",
            "order_delivered_customer_date",
            "order_estimated_delivery_date"
        ],
        "content": "TABLE: orders\n\nCOLUMN DESCRIPTIONS:\n*/",
        "chunk_type": "columns",
        "chunk_order": 6
    },
    {
        "table_name": "orders",
        "columns_names": [
            "order_id",
            "customer_id",
            "order_status",
            "order_purchase_timestamp",
            "order_approved_at",
            "order_delivered_carrier_date",
            "order_delivered_customer_date",
            "order_estimated_delivery_date"
        ],
        "content": "TABLE: orders\n\nSAMPLE DATA:\n/*\n3 rows from orders table:\norder_id\tcustomer_id\torder_status\torder_purchase_timestamp\torder_approved_at\torder_delivered_carrier_date\torder_delivered_customer_date\torder_estimated_delivery_date\ne481f51cbdc54678b7cc49136f2d6af7\t9ef432eb6251297304e76186b10a928d\tdelivered\t2017-10-02 10:56:33+00:00\t2017-10-02 11:07:15\t2017-10-04 19:55:00\t2017-10-10 21:25:13\t2017-10-18 00:00:00+00:00\n53cdb2fc8bc7dce0b6741e2150273451\tb0830fb4747a6c6d20dea0b8c802d7ef\tdelivered\t2018-07-24 20:41:37+00:00\t2018-07-26 03:24:27\t2018-07-26 14:31:00\t2018-08-07 15:27:45\t2018-08-13 00:00:00+00:00",
        "chunk_type": "samples",
        "chunk_order": 7
    },
    {
        "table_name": "orders",
        "columns_names": [
            "order_id",
            "customer_id",
            "order_status",
            "order_purchase_timestamp",
            "order_approved_at",
            "order_delivered_carrier_date",
            "order_delivered_customer_date",
            "order_estimated_delivery_date"
        ],
        "content": "TABLE: orders\n\nSAMPLE DATA:\n47770eb9100c2d0c44946d9cf07ec65d\t41ce2a54c0b03bf3443c3d931a367089\tdelivered\t2018-08-08 08:38:49+00:00\t2018-08-08 08:55:23\t2018-08-08 13:50:00\t2018-08-17 18:06:29\t2018-09-04 00:00:00+00:00\n*/",
        "chunk_type": "samples",
        "chunk_order": 8
    },
    {
        "table_name": "products",
        "columns_names": [
            "product_id",
            "product_category_name",
            "product_name_lenght",
            "product_description_lenght",
            "product_photos_qty",
            "product_weight_g",
            "product_length_cm",
            "product_height_cm",
            "product_width_cm"
        ],
        "content": "TABLE: products\n\nDESCRIPTION:\nincludes data about the products sold",
        "chunk_type": "description",
        "chunk_order": 1
    },
    {
        "table_name": "products",
        "columns_names": [
            "product_id",
            "product_category_name",
            "product_name_lenght",
            "product_description_lenght",
            "product_photos_qty",
            "product_weight_g",
            "product_length_cm",
            "product_height_cm",
            "product_width_cm"
        ],
        "content": "TABLE: products\n\nSCHEMA:\nCREATE TABLE products (\n\tproduct_id TEXT NOT NULL, \n\tproduct_category_name TEXT, \n\tproduct_name_lenght BIGINT, \n\tproduct_description_lenght BIGINT, \n\tproduct_photos_qty BIGINT, \n\tproduct_weight_g BIGINT, \n\tproduct_length_cm BIGINT, \n\tproduct_height_cm BIGINT, \n\tproduct_width_cm BIGINT, \n\tCONSTRAINT products_pkey PRIMARY KEY (product_id)\n)",
        "chunk_type": "schema",
        "chunk_order": 2
    },
    {
        "table_name": "products",
        "columns_names": [
            "product_id",
            "product_category_name",
            "product_name_lenght",
            "product_description_lenght",
            "product_photos_qty",
            "product_weight_g",
            "product_length_cm",
            "product_height_cm",
            "product_width_cm"
        ],
        "content": "TABLE: products\n\nCOLUMN DESCRIPTIONS:\n/*",
        "chunk_type": "columns",
        "chunk_order": 3
    },
    {
        "table_name": "products",
        "columns_names": [
            "product_id",
            "product_category_name",
            "product_name_lenght",
            "product_description_lenght",
            "product_photos_qty",
            "product_weight_g",
            "product_length_cm",
            "product_height_cm",
            "product_width_cm"
        ],
        "content": "TABLE: products\n\nCOLUMN DESCRIPTIONS:\nColumn Comments: {'product_id': 'unique product identifier', 'product_category_name': 'root category of product, in Portuguese.', 'product_name_lenght': 'number of characters extracted from the product name.', 'product_description_lenght': 'number of characters extracted from the product description.', 'product_photos_qty': 'number of product published photos', 'product_weight_g': 'product weight measured in grams.', 'product_length_cm': 'product length measured in centimeters.', 'product_height_cm': 'product height measured in centimeters.', 'product_width_cm': 'product width measured in",
        "chunk_type": "columns",
        "chunk_order": 4
    },
    {
        "table_name": "products",
        "columns_names": [
            "product_id",
            "product_category_name",
            "product_name_lenght",
            "product_description_lenght",
            "product_photos_qty",
            "product_weight_g",
            "product_length_cm",
            "product_height_cm",
            "product_width_cm"
        ],
        "content": "TABLE: products\n\nCOLUMN DESCRIPTIONS:\ncentimeters.'}",
        "chunk_type": "columns",
        "chunk_order": 5
    },
    {
        "table_name": "products",
        "columns_names": [
            "product_id",
            "product_category_name",
            "product_name_lenght",
            "product_description_lenght",
            "product_photos_qty",
            "product_weight_g",
            "product_length_cm",
            "product_height_cm",
            "product_width_cm"
        ],
        "content": "TABLE: products\n\nCOLUMN DESCRIPTIONS:\n*/",
        "chunk_type": "columns",
        "chunk_order": 6
    },
    {
        "table_name": "products",
        "columns_names": [
            "product_id",
            "product_category_name",
            "product_name_lenght",
            "product_description_lenght",
            "product_photos_qty",
            "product_weight_g",
            "product_length_cm",
            "product_height_cm",
            "product_width_cm"
        ],
        "content": "TABLE: products\n\nSAMPLE DATA:\n/*\n3 rows from products table:\nproduct_id\tproduct_category_name\tproduct_name_lenght\tproduct_description_lenght\tproduct_photos_qty\tproduct_weight_g\tproduct_length_cm\tproduct_height_cm\tproduct_width_cm\n1e9e8ef04dbcff4541ed26657ea517e5\tperfumaria\t40\t287\t1\t225\t16\t10\t14\n3aa071139cb16b67ca9e5dea641aaa2f\tartes\t44\t276\t1\t1000\t30\t18\t20\n96bd76ec8810374ed1b65e291975717f\tesporte_lazer\t46\t250\t1\t154\t18\t9\t15\n*/",
        "chunk_type": "samples",
        "chunk_order": 7
    },
    {
        "table_name": "sellers",
        "columns_names": [
            "seller_id",
            "seller_zip_code_prefix",
            "seller_city",
            "seller_state"
        ],
        "content": "TABLE: sellers\n\nDESCRIPTION:\nincludes data about the sellers that fulfilled orders made at Olist. Use it to find the seller location and to identify which seller fulfilled each product.",
        "chunk_type": "description",
        "chunk_order": 1
    },
    {
        "table_name": "sellers",
        "columns_names": [
            "seller_id",
            "seller_zip_code_prefix",
            "seller_city",
            "seller_state"
        ],
        "content": "TABLE: sellers\n\nSCHEMA:\nCREATE TABLE sellers (\n\tseller_id TEXT NOT NULL, \n\tseller_zip_code_prefix BIGINT, \n\tseller_city TEXT, \n\tseller_state TEXT, \n\tCONSTRAINT sellers_pkey PRIMARY KEY (seller_id)\n)",
        "chunk_type": "schema",
        "chunk_order": 2
    },
    {
        "table_name": "sellers",
        "columns_names": [
            "seller_id",
            "seller_zip_code_prefix",
            "seller_city",
            "seller_state"
        ],
        "content": "TABLE: sellers\n\nCOLUMN DESCRIPTIONS:\n/*\nColumn Comments: {'seller_id': 'seller unique identifier', 'seller_zip_code_prefix': 'first 5 digits of seller zip code'}\n*/",
        "chunk_type": "columns",
        "chunk_order": 3
    },
    {
        "table_name": "sellers",
        "columns_names": [
            "seller_id",
            "seller_zip_code_prefix",
            "seller_city",
            "seller_state"
        ],
        "content": "TABLE: sellers\n\nSAMPLE DATA:\n/*\n3 rows from sellers table:\nseller_id\tseller_zip_code_prefix\tseller_city\tseller_state\n3442f8959a84dea7ee197c632cb2df15\t13023\tcampinas\tSP\nd1b65fc7debc3361ea86b5f14c68d2e2\t13844\tmogi guacu\tSP\nce3ad9de960102d0677a81f5d0bb7b2d\t20031\trio de janeiro\tRJ\n*/",
        "chunk_type": "samples",
        "chunk_order": 4
    }
]